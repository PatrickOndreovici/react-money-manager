[{"C:\\Users\\Patrick\\Desktop\\money-manager\\src\\index.js":"1","C:\\Users\\Patrick\\Desktop\\money-manager\\src\\App.js":"2","C:\\Users\\Patrick\\Desktop\\money-manager\\src\\reportWebVitals.js":"3","C:\\Users\\Patrick\\Desktop\\money-manager\\src\\Dashboard.js":"4","C:\\Users\\Patrick\\Desktop\\money-manager\\src\\Graph.js":"5","C:\\Users\\Patrick\\Desktop\\money-manager\\src\\Nav.js":"6","C:\\Users\\Patrick\\Desktop\\money-manager\\src\\Item.js":"7","C:\\Users\\Patrick\\Desktop\\money-manager\\src\\exchangeRatesApi.js":"8"},{"size":585,"mtime":1608904756719,"results":"9","hashOfConfig":"10"},{"size":1575,"mtime":1608977701111,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":10231,"mtime":1609022018089,"results":"13","hashOfConfig":"10"},{"size":4303,"mtime":1609011193408,"results":"14","hashOfConfig":"10"},{"size":946,"mtime":1608905058190,"results":"15","hashOfConfig":"10"},{"size":793,"mtime":1608977996972,"results":"16","hashOfConfig":"10"},{"size":240,"mtime":1608718311575,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"846wba",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"C:\\Users\\Patrick\\Desktop\\money-manager\\src\\index.js",[],["38","39"],"C:\\Users\\Patrick\\Desktop\\money-manager\\src\\App.js",["40"],"import React, {useEffect, useState} from 'react';\nimport './App.css';\nimport Dashboard from './Dashboard';\nimport Graph from './Graph';\nimport Nav from './Nav';\nimport {Switch, Route, useLocation} from 'react-router-dom';\n\nfunction App() {\n  const [localStorageData, setLocalStorageData] = useState(null);\n  const [activeIndex, setActiveIndex] = useState(0);\n\n  useEffect(() => {\n    if (localStorage.length === 0){\n      const data = {\n        income: {\n          EUR: 0,\n          RON: 0\n        },\n        expense: {\n          EUR: 0,\n          RON: 0\n        },\n        deposit: {\n          EUR: 0,\n          RON: 0\n        }\n      }\n      setLocalStorageData(data);\n      localStorage.setItem('data', JSON.stringify(data));\n    }\n    else{\n      const data = localStorage.getItem('data');\n      setLocalStorageData(JSON.parse(data));\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('data', JSON.stringify(localStorageData));\n  }, [localStorageData]);\n  let location = useLocation();\n  useEffect(() => {\n    const route = window.location.pathname;\n    if (route === \"/\") setActiveIndex(0);\n    else if (route == '/graph') setActiveIndex(1);\n  }, [location]);\n  return (\n      <div className=\"App\">\n        <Nav activeIndex = {activeIndex}/>\n        <Switch>\n          <Route path=\"/\" exact render={props => (\n              <Dashboard {...props} localStorageData = {localStorageData} setLocalStorageData = {setLocalStorageData}/>\n            )} />\n          <Route path=\"/graph\" component={Graph} />\n        </Switch>\n      </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\Patrick\\Desktop\\money-manager\\src\\reportWebVitals.js",[],"C:\\Users\\Patrick\\Desktop\\money-manager\\src\\Dashboard.js",["41","42","43","44","45","46"],"C:\\Users\\Patrick\\Desktop\\money-manager\\src\\Graph.js",["47","48","49","50"],"import React, {useEffect, useState} from 'react';\r\nimport './Graph.css';\r\nimport {Line} from 'react-chartjs-2';\r\nimport exchangeRatesApi from './exchangeRatesApi';\r\n\r\nfunction Graph() {\r\n  const [currency, setCurrency] = useState(\"EUR\");\r\n  \r\n  const [data, setData] = useState({\r\n    labels: ['other day', 'yesterday', 'today'],\r\n    datasets: [\r\n      {\r\n        label: 'Last 3 days',\r\n        fill: true,\r\n        lineTension: 0.1,\r\n        backgroundColor: 'rgba(75,192,192,0.4)',\r\n        borderColor: 'rgba(75,192,192,1)',\r\n        borderCapStyle: 'butt',\r\n        borderDash: [],\r\n        borderDashOffset: 0.0,\r\n        borderJoinStyle: 'miter',\r\n        pointBorderColor: 'rgba(75,192,192,1)',\r\n        pointBackgroundColor: '#fff',\r\n        pointBorderWidth: 5,\r\n        pointHoverRadius: 8,\r\n        pointHoverBackgroundColor: 'rgba(75,192,192,1)',\r\n        pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n        pointHoverBorderWidth: 2,\r\n        pointRadius: 1,\r\n        pointHitRadius: 10,\r\n        data: [0, 0, 0]\r\n      }\r\n    ]\r\n  });\r\n  useEffect(async () => {\r\n    const dataCurrency = await exchangeRatesApi(currency);\r\n    if (localStorage.length !== 0){\r\n      modifyData(dataCurrency);\r\n    }\r\n  }, []);\r\n  useEffect(async () => {\r\n    const dataCurrency = await exchangeRatesApi(currency);\r\n    if (localStorage.length !== 0){\r\n      modifyData(dataCurrency);\r\n    }\r\n  }, [currency]);\r\n\r\n  const changeCurrency = (event) => {\r\n    setCurrency(event.target.value);\r\n  }\r\n  const getTotalProfit = (parsedHistory, type, date, money, aux) => {\r\n    if (parsedHistory[type][date] !== undefined){\r\n      for (let i = 0; i < parsedHistory[type][date].length; ++i){\r\n        const v = parsedHistory[type][date][i];\r\n        for (let j = 0; j < v.length; ++j){\r\n          let amount = Number(v[j][1]);\r\n          let curr = v[j][2];\r\n          if (money[curr] === undefined){\r\n            money[curr] = 0;\r\n          }\r\n          money[curr] += amount * aux;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  const getCost = (money, rates) => {\r\n    let cost = 0;\r\n    if (money[\"EUR\"] === undefined) money[\"EUR\"] = 0;\r\n    if (money[\"RON\"] === undefined) money[\"RON\"] = 0;\r\n    if (currency === \"EUR\"){\r\n      cost += Number(money[\"EUR\"]);\r\n      cost += Number(money[\"RON\"]) / Number(rates[\"RON\"]);\r\n    }\r\n    else{\r\n      cost = Number(money[\"RON\"]);\r\n      cost += Number(money[\"EUR\"]) / Number(rates[\"EUR\"]);\r\n    }\r\n    return cost.toFixed(2);\r\n  }\r\n  const modifyData = (rates) => {\r\n    let history = localStorage.getItem('history');\r\n    if (history === null){\r\n      return;\r\n    }\r\n    const auxData = {...data};\r\n    auxData.datasets[0].data = [];\r\n    let parsedHistory = JSON.parse(history);\r\n    let today = new Date();\r\n    let yesterday = new Date(today)\r\n    yesterday.setDate(yesterday.getDate() - 1);\r\n    yesterday = yesterday.toLocaleDateString();\r\n    let otherDay = new Date(today);\r\n    otherDay.setDate(otherDay.getDate() - 2);\r\n    otherDay = otherDay.toLocaleDateString();\r\n    today = today.toLocaleDateString();\r\n    let money = {};\r\n    getTotalProfit(parsedHistory, \"income\", otherDay, money, 1);\r\n    getTotalProfit(parsedHistory, \"expense\", otherDay, money, -1);\r\n    let total = getCost(money, rates);\r\n    auxData.datasets[0].data.push(total);\r\n\r\n    money = {};\r\n    getTotalProfit(parsedHistory, \"income\", yesterday, money, 1);\r\n    getTotalProfit(parsedHistory, \"expense\", yesterday, money, -1);\r\n    total = getCost(money, rates);\r\n    auxData.datasets[0].data.push(total);\r\n\r\n    money = {};\r\n    getTotalProfit(parsedHistory, \"income\", today, money, 1);\r\n    getTotalProfit(parsedHistory, \"expense\", today, money, -1);\r\n    console.log(money);\r\n    total = getCost(money, rates);\r\n    auxData.datasets[0].data.push(total);\r\n    setData(auxData);\r\n    console.log(auxData);\r\n  }\r\n  console.log(data);\r\n  return (\r\n    <div className=\"graph\">\r\n      <h1>graph</h1>\r\n      <select style = {{margin: \"auto\"}} onChange = {changeCurrency}>\r\n        <option>EUR</option>\r\n        <option>RON</option>\r\n      </select>\r\n      <div style={{ position: \"relative\", margin: \"auto\", width: \"70vw\", height: \"500px\"}}>\r\n       <Line data={data} options={{\r\n            maintainAspectRatio : false\r\n          }}/>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Graph;\r\n","C:\\Users\\Patrick\\Desktop\\money-manager\\src\\Nav.js",[],"C:\\Users\\Patrick\\Desktop\\money-manager\\src\\Item.js",["51"],"import './Item.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTrash } from '@fortawesome/free-solid-svg-icons'\r\nimport { findAllByDisplayValue } from '@testing-library/react';\r\n\r\nfunction Item(props) {\r\n  return (\r\n    <div className=\"Item\" style = {{backgroundColor: props.color}}>\r\n        <div className = \"deleteButton\">\r\n          <FontAwesomeIcon onClick = {() => props.deleteItem(props.index)} icon={faTrash} />\r\n        </div>\r\n        <h4 className = \"nameOfItem\">{props.nameOfItem}</h4>\r\n        <div style = {{display: \"inline\", float: \"right\"}}>\r\n          <h4 className = \"costOfItem\">{props.costOfItem}</h4>\r\n          <h4 className = \"currencyOfItem\">{props.currencyOfItem}</h4>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Item;\r\n","C:\\Users\\Patrick\\Desktop\\money-manager\\src\\exchangeRatesApi.js",[],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":43,"column":20,"nodeType":"58","messageId":"59","endLine":43,"endColumn":22},{"ruleId":"60","severity":1,"message":"61","line":4,"column":18,"nodeType":"62","messageId":"63","endLine":4,"endColumn":28},{"ruleId":"64","severity":1,"message":"65","line":21,"column":13,"nodeType":"66","endLine":26,"endColumn":4},{"ruleId":"64","severity":1,"message":"65","line":28,"column":13,"nodeType":"66","endLine":31,"endColumn":4},{"ruleId":"64","severity":1,"message":"65","line":33,"column":13,"nodeType":"66","endLine":36,"endColumn":4},{"ruleId":"60","severity":1,"message":"67","line":57,"column":9,"nodeType":"62","messageId":"63","endLine":57,"endColumn":19},{"ruleId":"56","severity":1,"message":"57","line":104,"column":26,"nodeType":"58","messageId":"59","endLine":104,"endColumn":28},{"ruleId":"64","severity":1,"message":"65","line":35,"column":13,"nodeType":"66","endLine":40,"endColumn":4},{"ruleId":"64","severity":1,"message":"68","line":40,"column":6,"nodeType":"69","endLine":40,"endColumn":8,"suggestions":"70"},{"ruleId":"64","severity":1,"message":"65","line":41,"column":13,"nodeType":"66","endLine":46,"endColumn":4},{"ruleId":"64","severity":1,"message":"71","line":46,"column":6,"nodeType":"69","endLine":46,"endColumn":16,"suggestions":"72"},{"ruleId":"60","severity":1,"message":"73","line":4,"column":10,"nodeType":"62","messageId":"63","endLine":4,"endColumn":31},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'faTrashAlt' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'depositSVG' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'currency' and 'modifyData'. Either include them or remove the dependency array.","ArrayExpression",["76"],"React Hook useEffect has a missing dependency: 'modifyData'. Either include it or remove the dependency array.",["77"],"'findAllByDisplayValue' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"78","fix":"79"},{"desc":"78","fix":"80"},"Update the dependencies array to be: [currency, modifyData]",{"range":"81","text":"82"},{"range":"83","text":"82"},[1222,1224],"[currency, modifyData]",[1397,1407]]